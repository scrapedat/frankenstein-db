# FrankensteinDB Production Docker Compose
version: '3.8'

services:
  frankenstein-db:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: frankenstein-db
    restart: unless-stopped
    environment:
      - FRANKENSTEIN_EVOLUTION_DB=/data/sqlite/website_evolution.db
      - FRANKENSTEIN_SEARCH_DB=/data/sqlite/search_index.db
      - FRANKENSTEIN_BLOB_STORAGE=/data/blobs
      - FRANKENSTEIN_REDIS_HOST=redis
      - FRANKENSTEIN_REDIS_PORT=6379
      - FRANKENSTEIN_LOG_LEVEL=INFO
    volumes:
      # Persistent data volumes
      - frankenstein_sqlite:/data/sqlite
      - frankenstein_blobs:/data/blobs
      - frankenstein_logs:/data/logs
      # Optional: Local development binding
      # - ./data/sqlite:/data/sqlite
      # - ./data/blobs:/data/blobs
      # - ./data/logs:/data/logs
    depends_on:
      - redis
    networks:
      - frankenstein-network
    # Uncomment if you want to expose API
    # ports:
    #   - "8000:8000"

  redis:
    image: redis:7-alpine
    container_name: frankenstein-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --appendfsync everysec
    volumes:
      # Persistent Redis data
      - frankenstein_redis:/data
    networks:
      - frankenstein-network
    # Optional: Expose Redis for debugging
    # ports:
    #   - "6379:6379"

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: frankenstein-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - frankenstein-network
    profiles:
      - debug

# Named volumes for data persistence
volumes:
  frankenstein_sqlite:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./production-data/sqlite
  frankenstein_blobs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./production-data/blobs
  frankenstein_redis:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./production-data/redis
  frankenstein_logs:
    driver: local

networks:
  frankenstein-network:
    driver: bridge
    name: frankenstein-network