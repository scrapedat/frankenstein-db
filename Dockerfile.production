# FrankensteinDB Production Dockerfile
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create frankenstein user for security
RUN useradd -m -u 1001 -s /bin/bash frankenstein

# Set working directory
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY --chown=frankenstein:frankenstein src/ ./src/
COPY --chown=frankenstein:frankenstein examples/ ./examples/

# Create persistent data directories
RUN mkdir -p /data/sqlite /data/blobs /data/logs && \
    chown -R frankenstein:frankenstein /data

# Switch to non-root user
USER frankenstein

# Environment variables for production
ENV PYTHONPATH=/app
ENV FRANKENSTEIN_EVOLUTION_DB=/data/sqlite/website_evolution.db
ENV FRANKENSTEIN_SEARCH_DB=/data/sqlite/search_index.db
ENV FRANKENSTEIN_BLOB_STORAGE=/data/blobs
ENV FRANKENSTEIN_REDIS_HOST=redis
ENV FRANKENSTEIN_REDIS_PORT=6379
ENV FRANKENSTEIN_LOG_LEVEL=INFO

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "from src import FrankensteinDB; print('OK')" || exit 1

# Expose no ports (internal service)
# EXPOSE 8000

# Default command - can be overridden
CMD ["python3", "-c", "from src import FrankensteinDB; print('FrankensteinDB ready for production')"]